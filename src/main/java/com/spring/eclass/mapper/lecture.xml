<?xml version="1.0" encoding="UTF-8"?>

<!-- ==== #29. mapper 기본설정 ==== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ==== #29. 루트 엘리먼트 & 네임스페이스 설정(프로젝트 전체내에서 유일해야 한다.) ==== -->

<!-- #### 중요 #### 
	 HashMap 타입으로 매개변수를 받아온 것을 꺼내서 사용할때 
	 1. 데이터로 사용할때는 #{key명} 이고,
	 2. 식별자(테이블명, 컬럼명)로 사용할때는 ${key명} 이고,
	 3. myBatis 에서 제공하는 if 엘리먼트나 choose 엘리먼트 안에서 사용할때는 
	       그냥 <if test="key명"> <when test="key명"> 으로 사용한다.
-->

<mapper namespace="lecture">

	<!-- 강의 개설하기 -->
	<insert id="lecture_insert" parameterType="HashMap">		
		insert into lecture_tbl(lecSeq, lecNum, fk_subSeq, lecTitle, lecLink, lecStartday, lecEndday)
		values (SEQ_LECSEQ.nextval, #{lecNum}, #{fk_subSeq}, #{lecTitle}, #{lecLink}, #{lecStartday}, #{lecEndday})		
	</insert>
	
	<!-- 강의 수정하기 -->
	<update id="lectureEdit" parameterType="HashMap">
		update lecture_tbl set lecNum=#{lecNum}, lecTitle=#{lecTitle}, lecLink=#{lecLink}, lecStartday=#{lecStartday}, lecEndday=#{lecEndday}
   		where lecSeq = #{lecSeq}
	</update>
	
	<!-- 강의 삭제하기 -->
	<delete id="lectureDelete" parameterType="String">
		delete from lecture_tbl where lecSeq = #{lecSeq}
	</delete>
	
	<!-- 강의 목록 -->
	<select id="ListSearch" resultType="com.spring.kimej.model.LectureVO">
	    select lecSeq, lecNum, lecTitle, to_char(lecStartday, 'yyyy-mm-dd') AS lecStartday, to_char(lecEndday, 'yyyy-mm-dd') AS lecEndday, subName, fk_subSeq
		from lecture_tbl A join subject_tbl B
		on A.fk_subSeq = B.subSeq
		where fk_subSeq = #{fk_subSeq}
		<if test='searchWord != ""'>
		and lecTitle like '%'|| #{searchWord} ||'%'
		</if>
		order by lecSeq desc
	</select>
	
	<!-- 강의 상세 페이지 -->
	<select id="getView" parameterType="String" resultType="com.spring.kimej.model.LectureVO">
		select lecTitle, lecLink, lecStartday, lecEndday, fk_subSeq, lecSeq, lecNum
		from lecture_tbl
		where lecSeq = #{lecSeq}
	</select>
	
	<!-- 강의 댓글 작성하기 -->
	<insert id="addComment" parameterType="com.spring.kimej.model.LectureCommentVO">
    	insert into lectureComment_tbl(lecComSeq, fk_lecSeq, fk_subSeq, fk_userid, comContent, writeday)
        values(seq_lecComSeq.nextval, #{fk_lecSeq}, #{fk_subSeq}, #{fk_userid}, #{comContent}, default)
    </insert>
    
    <!-- 강의 댓글 삭제하기 -->
	<delete id="lectureCommentDelete" parameterType="String">
		delete from lectureComment_tbl where lecComSeq = #{lecComSeq}
	</delete>
    
    <!-- 강의 댓글 보여주기 -->
	<select id="getCommentListPaging" parameterType="HashMap" resultType="com.spring.kimej.model.LectureCommentVO">
    	select fk_userid, comContent, writeday, lecComSeq
		from 
		(
	  	  select row_number()over(order by lecComSeq desc) as rno,
	             fk_userid, comContent, to_char(writeday, 'yyyy-mm-dd hh24:mi:ss') as writeday, lecComSeq
	      from lectureComment_tbl
	      where fk_lecSeq = #{fk_lecSeq}
	    ) V 
	    where rno between #{startRno} and #{endRno}
    </select>
     
     <!-- 원게시물에 딸린 댓글 totalPage 알아오기(Ajax 로 처리) -->
     <select id="getCommentTotalCount" parameterType="HashMap" resultType="int">
         select count(*)
         from lectureComment_tbl
         where fk_lecSeq = #{fk_lecSeq}
     </select>
    

</mapper>