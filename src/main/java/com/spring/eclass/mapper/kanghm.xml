<?xml version="1.0" encoding="UTF-8"?>

<!-- ==== #29. mapper 기본설정 ==== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ==== #29. 루트 엘리먼트 & 네임스페이스 설정(프로젝트 전체내에서 유일해야 한다.) ==== -->
<mapper namespace="kanghm">
	
	<!-- 메인페이지에서 공지사항 띄워주기 -->
	<select id="getindexnotice" resultType="com.spring.kanghm.model.NoticeboardVO">
		  select rno,writedate,notice_seq
	     , case when length(title) > 16 then substr(title,1,16) || '...'else title end as title
	    from
	    (
	        select rownum as rno,title,to_char(writedate,'yyyy-mm-dd') as writedate ,notice_seq
	        from notice_board
	        where status = 1 
	        order by writedate desc   
	    ) V
	    where rno between 1 and 5		
	</select>
	
	<!-- 메인페이지에서 후원순위 보여주기  -->
	<select id="getindexdon" resultType="com.spring.kimeh.model.DonStoryVO">
		select sumPayment, donseq, subject, name, point, noName, noDonpmt
	    from 
	    (
	    select rownum as rno,
	         S.donseq, S.subject, S.donStatus, S.targetAmount,
	         I.payment, I.name, I.point, I.noName, I.noDonpmt,
	         (I.payment + I.point) as sumPayment
	    from donStory S left join donPayment I
	    on S.donseq = I.fk_donSeq
	    )V
	    where rno between 1 and 5
	    order by sumPayment desc
	</select>
	
	<!-- 첨부파일이 존재하지 않는 자유게시판 글쓰기 -->
	<insert id="addFreeboard" parameterType="com.spring.kanghm.model.FreeboardVO">
	    insert into free_board(free_seq, fk_userid, name, title, content, password, viewcount, writedate, status)
	    values(free_seq.nextval, #{fk_userid}, #{name}, #{title}, #{content}, #{password}, default, default, default) 
	</insert>

 
	<!-- 첨부파일이 존재하는 자유게시판 글쓰기 -->
	<insert id="addFreeboard_withFile" parameterType="com.spring.kanghm.model.FreeboardVO">
	    <if test='free_seq == "" '>
	    	insert into free_board(free_seq, fk_userid, name, title, content, password, viewcount, writedate, status, fileName, orgFilename)
	    	values(free_seq.nextval, #{fk_userid}, #{name}, #{title}, #{content}, #{password}, default, default, default, #{fileName}, #{orgFilename})	    
	    </if>
	    
	    <if test='free_seq != "" '>
	    	insert into free_board(free_seq, fk_userid, name, title, content, password, viewcount, writedate, status, fileName, orgFilename)
	    	values(free_seq.nextval, #{fk_userid}, #{name}, #{title}, #{content}, #{password}, default, default, default, #{fileName}, #{orgFilename})	    
	    </if>  
	</insert>

	<!-- 자유게시판 총게시물 개수 구하기 -->
	<select id="getFreeTotalCount" parameterType="HashMap" resultType="int">
		select count(*)
		from free_board
		where status = 1
		<if test='searchWord != ""'>
			and lower(${searchType}) like '%'|| lower(#{searchWord}) ||'%'
		</if>	
	</select>
	
	<!-- 자유게시판 목록 가져오기 -->
	<select id="getFreeboardList" parameterType="HashMap" resultType="com.spring.kanghm.model.FreeboardVO">
		select rno,free_seq,fk_userid,name,title,viewcount,writedate,filename
		from
		    (
		    select rownum as rno,free_seq,fk_userid,name,title,viewcount,writedate,filename
		    from
		        (
		        select free_seq,fk_userid,name,title,viewcount,to_char(writedate,'yyyy-mm-dd') as writedate,filename
		        from free_board
		        where status = 1
		        	<if test='searchWord != "" '>
			         and ${searchType} like '%'|| #{searchWord} ||'%'
			        </if>
		        order by free_seq desc
		        ) V
		    ) T
		where rno between #{startRno} and #{endRno}
	</select>
	
	
	<!-- 자유게시판 조회수 증가 없이 글 조회하기 -->
	<select id="getFreeViewNoAdd" parameterType="String" resultType="com.spring.kanghm.model.FreeboardVO">
		select previousseq, previoussubject, free_seq, fk_userid, name, title, content, viewcount, writedate
		      ,nextseq, nextsubject, orgFilename, fileName
		from
		(
		 select lag(free_seq, 1) over(order by free_seq desc) as previousseq  
				           , nvl(lag(title, 1) over(order by free_seq desc),'이전글이 없습니다')as previoussubject				           				           
				           , free_seq, fk_userid, name, title, content, viewcount
				           , to_char(writedate, 'yyyy-mm-dd hh24:mi:ss') as writedate				         
				           , lead(free_seq, 1) over(order by free_seq desc) as nextseq
				           , nvl(lead(title, 1) over(order by free_seq desc),'다음글이 없습니다.') as nextsubject
		                   , orgFilename, fileName
				      from free_board
				      where status = 1
		) V
		where free_seq = #{free_seq}
	</select>
	
	<!-- 자유게시판 댓글쓰기  -->
	<insert id="addFreeComment" parameterType="com.spring.kanghm.model.FreeCommentVO">
		insert into free_board_comment(comment_seq,parentSeq,fk_userid,name,content,writedate,status)
		values(comment_seq.nextval,#{parentSeq},#{fk_userid},#{name},#{content},default,default)	
	</insert>
	
	<!-- 자유게시판 댓글보여주기 -->
	<select id="freecommentList" parameterType="HashMap" resultType="com.spring.kanghm.model.FreeCommentVO">
		select comment_seq, name, content, writedate
		from
		(
			select row_number() over(order by comment_seq desc) as rno, comment_seq,name,content,to_char(writedate, 'yyyy-mm-dd hh24:mi:ss') as writedate
			from free_board_comment
			where status = 1 and parentSeq = #{parentSeq}
			order by comment_seq desc
		) V
		where rno between #{startRno} and #{endRno}
	</select>
	
	
	<!-- 자유게시판 글번호에 해당하는 댓글의 총갯수를 알아오기 -->
	<select id="getCommentTotalCount" parameterType="HashMap" resultType="int" >
	 	select count(*)
		from free_board_comment
		where status = 1 and parentSeq = #{parentSeq}
	</select>
	
	<!-- 자유게시판 댓글 삭제하기  -->
	<update id="delFreeComment" parameterType="String">
		update free_board_comment set status = 0
		where comment_seq = #{delseq}	
	</update>
	
	<!-- 자유게시판 글 삭제 완료하기  -->
	<update id="delfreeboard" parameterType="HashMap">
		update free_board set status = 0
		where free_seq = #{free_seq} and password= #{password}
	</update>
	
	<!-- 자유게시판 글을 삭제하면 딸린 댓글도 같이 삭제하기 -->
	<update id="delComment" parameterType="HashMap">
		update free_board_comment set status = 0
		where parentSeq = #{free_seq}
	</update>
	
	<!-- 자유게시판 글 수정하기 완료하기 -->
	<update id="editfreeboardEnd" parameterType="com.spring.kanghm.model.FreeboardVO">
		update free_board set title = #{title}
							 ,content = #{content}
							 ,writedate = sysdate
		where free_seq = #{free_seq} and password = #{password}
	</update>
	
	<!-- 자유게시판 조회수 증가하며 글 조회하기 -->
	<select id="getFreeView" parameterType="String" resultType="com.spring.kanghm.model.FreeboardVO">
		select previousseq, previoussubject, free_seq, fk_userid, name, title, content, viewcount, writedate
		      ,nextseq, nextsubject, orgFilename, fileName
		from
		(
		 select lag(free_seq, 1) over(order by free_seq desc) as previousseq  
				           , nvl(lag(title, 1) over(order by free_seq desc),'이전글이 없습니다')as previoussubject				           				           
				           , free_seq, fk_userid, name, title, content, viewcount
				           , to_char(writedate, 'yyyy-mm-dd hh24:mi:ss') as writedate				         
				           , lead(free_seq, 1) over(order by free_seq desc) as nextseq
				           , nvl(lead(title, 1) over(order by free_seq desc),'다음글이 없습니다.') as nextsubject
		                   , orgFilename, fileName
				      from free_board
				      where status = 1
		) V
		where free_seq = #{free_seq}
	</select>
	
	<!-- 조회수 1증가 시키기 -->
	<update id="addViewCount" parameterType="String">
		update free_board set viewcount = viewcount + 1
		where free_seq = #{free_seq}
	</update>
	
	<!-- 공지사항 총게시물 개수 구하기  -->
	<select id="getNoticeTotalCount" parameterType="HashMap" resultType="int">
		select count(*)
		from notice_board
		where status = 1
		<if test='searchWord != ""'>
			and lower(${searchType}) like '%'|| lower(#{searchWord}) ||'%'
		</if>	
	</select>
	
	<!-- 공지사항 목록 가져오기 -->
	<select id="getNoticeboardList" parameterType="HashMap" resultType="com.spring.kanghm.model.NoticeboardVO">
		select rno,notice_seq,title,viewcount,writedate,filename
		from
		    (
		    select rownum as rno,notice_seq,title,viewcount,writedate,filename
		    from
		        (
		        select notice_seq,title,viewcount,to_char(writedate,'yyyy-mm-dd') as writedate,filename
		        from notice_board
		        where status = 1
		        	<if test='searchWord != "" '>
			         and ${searchType} like '%'|| #{searchWord} ||'%'
			        </if>
		        order by notice_seq desc
		        ) V
		    ) T
		where rno between #{startRno} and #{endRno}
	</select>
	
	<!-- 첨부파일이 존재하지 않는 공지사항 글쓰기  -->
	<insert id="addNoticeboard" parameterType="com.spring.kanghm.model.NoticeboardVO">
	    insert into notice_board(notice_seq, title, content, viewcount, writedate, status)
	    values(notice_seq.nextval, #{title}, #{content}, default, default, default) 
	</insert>
	
	<!-- 첨부파일이 존재하는 공지사항 글쓰기 -->
	<insert id="addNoticeboard_withFile" parameterType="com.spring.kanghm.model.NoticeboardVO">
	    	insert into notice_board(notice_seq, title, content, viewcount, writedate, status, fileName, orgFilename)
	    	values(notice_seq.nextval, #{title}, #{content}, default, default, default, #{fileName}, #{orgFilename})	     
	</insert>
	
	
	<!-- 공지사항 조회수 증가하며 글 조회하기  -->
	<select id="getNoticeView" parameterType="String" resultType="com.spring.kanghm.model.NoticeboardVO">
		select previousseq, previoussubject, notice_seq, title, content, viewcount, writedate
		      ,nextseq, nextsubject, orgFilename, fileName
		from
		(
		 select lag(notice_seq, 1) over(order by notice_seq desc) as previousseq  
				           , nvl(lag(title, 1) over(order by notice_seq desc),'이전글이 없습니다')as previoussubject				           				           
				           , notice_seq, title, content, viewcount
				           , to_char(writedate, 'yyyy-mm-dd hh24:mi:ss') as writedate				         
				           , lead(notice_seq, 1) over(order by notice_seq desc) as nextseq
				           , nvl(lead(title, 1) over(order by notice_seq desc),'다음글이 없습니다.') as nextsubject
		                   , orgFilename, fileName
				      from notice_board
				      where status = 1
		) V
		where notice_seq = #{notice_seq}
	</select>
	
	<!-- 공지사항 조회수 1증가 시키기  -->
	<update id="addNoticeViewCount" parameterType="String">
		update notice_board set viewcount = viewcount + 1
		where notice_seq = #{notice_seq}
	</update>
	
	
	<!-- 공지사항 조회수 증가 없이 글 조회하기 -->
	<select id="getNoticeViewNoAdd" parameterType="String" resultType="com.spring.kanghm.model.NoticeboardVO">
		select previousseq, previoussubject, notice_seq, title, content, viewcount, writedate
		      ,nextseq, nextsubject, orgFilename, fileName
		from
		(
		 select lag(notice_seq, 1) over(order by notice_seq desc) as previousseq  
				           , nvl(lag(title, 1) over(order by notice_seq desc),'이전글이 없습니다')as previoussubject				           				           
				           , notice_seq, title, content, viewcount
				           , to_char(writedate, 'yyyy-mm-dd hh24:mi:ss') as writedate				         
				           , lead(notice_seq, 1) over(order by notice_seq desc) as nextseq
				           , nvl(lead(title, 1) over(order by notice_seq desc),'다음글이 없습니다.') as nextsubject
		                   , orgFilename, fileName
				      from notice_board
				      where status = 1
		) V
		where notice_seq = #{notice_seq}
	</select>
	
	<!-- 공지사항 게시판 글 수정하기 완료하기 -->
	<update id="editnoticeboardEnd" parameterType="com.spring.kanghm.model.NoticeboardVO">
		update notice_board set title = #{title}
							 ,content = #{content}
							 ,writedate = sysdate
		where notice_seq = #{notice_seq}
	</update>
	
	<!-- 공지사항 게시판 글 삭제하기 -->
	<update id="delNoticeboard" parameterType="String">
		update notice_board set status = 0
		where notice_seq = #{notice_seq}
	</update>
	
	
	<!-- Q&A 게시판 총게시물 개수 구하기  -->
	<select id="getQuestionTotalCount" parameterType="HashMap" resultType="int">
		select count(*)
		from question_board
		where status = 1
		<if test='searchWord != ""'>
			and lower(${searchType}) like '%'|| lower(#{searchWord}) ||'%'
		</if>	
	</select>
	
	
	<!-- Q&A 게시판 목록 가져오기 -->
	<select id="getQuestionboardList" parameterType="HashMap" resultType="com.spring.kanghm.model.QuestionVO">
		 select question_seq, fk_userid, name, title, viewcount, writedate
		     , groupno, fk_seq, depthno , filename ,secret
			from 
			(
			    select rownum AS rno
			         , question_seq, fk_userid, name, title, viewcount, writedate 
			         , groupno, fk_seq, depthno ,filename ,secret
			    from
			    (
			        select question_seq, fk_userid, name, title,  
			               viewcount, to_char(writedate, 'yyyy-mm-dd') as writedate,
			               groupno, fk_seq, depthno, filename ,secret
			        from question_board
			        where status = 1
			         <if test='searchWord != ""'>
				      and ${searchType} like '%'|| #{searchWord} ||'%'
				     </if>
			        start with fk_seq = 0
			        connect by prior question_seq = fk_seq
			        order siblings by groupno desc, question_seq asc        
			    ) V
			) T
			where rno between #{startRno} and #{endRno}
	</select>
	
	<!-- 첨부파일이 존재하지 않는 Q&A 글쓰기  -->	
	<insert id="addquestion" parameterType="com.spring.kanghm.model.QuestionVO">
		<if test='fk_seq == "" '>
	    	insert into question_board(question_seq, fk_userid, name, title, content, password, viewcount, writedate, status, groupno, fk_seq, depthno, secret)
	    	values(question_seq.nextval, #{fk_userid}, #{name}, #{title}, #{content}, #{password}, default, default, default, #{groupno}, default, default, #{secret})
	    </if>
	    
	    <if test='fk_seq != "" '>
	    	insert into question_board(question_seq, fk_userid, name, title, content, password, viewcount, writedate, status, groupno, fk_seq, depthno, secret)
	    	values(question_seq.nextval, #{fk_userid}, #{name}, #{title}, #{content}, #{password}, default, default, default, #{groupno}, #{fk_seq}, #{depthno}+1, #{secret} )
	    </if> 
	</insert> 
	
	
	<!-- 첨부파일이 존재하는 Q&A 글쓰기  -->
	<insert id="addquestion_withFile" parameterType="com.spring.kanghm.model.QuestionVO">
		<if test='fk_seq == "" '>
	    	insert into question_board(question_seq, fk_userid, name, title, content, password, viewcount, writedate, status, groupno, fk_seq, depthno, fileName, orgFilename, secret)
	    	values(question_seq.nextval, #{fk_userid}, #{name}, #{title}, #{content}, #{password}, default, default, default, #{groupno}, default, default ,#{fileName}, #{orgFilename}, #{secret})
	    </if>
	    
	    <if test='fk_seq != "" '>
	    	insert into question_board(question_seq, fk_userid, name, title, content, password, viewcount, writedate, status, groupno, fk_seq, depthno, fileName, orgFilename, secret)
	    	values(question_seq.nextval, #{fk_userid}, #{name}, #{title}, #{content}, #{password}, default, default, default, #{groupno}, #{fk_seq}, #{depthno}+1, #{fileName}, #{orgFilename}, #{secret})
	    </if>
	</insert>
	
	<!-- groupno 컬럼의 최대값 구하기 -->
	<select id="getGroupnoMax" resultType="int">
		select nvl(max(groupno),0)
		from question_board
	</select>
	
	
	<!-- Q&A 조회수 증가하며 글 조회하기 -->
	<select id="getQuestionView" parameterType="String" resultType="com.spring.kanghm.model.QuestionVO">
		   select previousseq, previoussubject, question_seq, title, content, viewcount, writedate
		      ,nextseq, nextsubject, orgFilename, fileName, secret, fk_userid, groupno, depthno
			from
			(
			 select lag(question_seq, 1) over(order by question_seq desc) as previousseq  
					           , nvl(lag(title, 1) over(order by question_seq desc),'이전글이 없습니다')as previoussubject				           				           
					           , question_seq, title, content, viewcount
					           , to_char(writedate, 'yyyy-mm-dd hh24:mi:ss') as writedate				         
					           , lead(question_seq, 1) over(order by question_seq desc) as nextseq
					           , nvl(lead(title, 1) over(order by question_seq desc),'다음글이 없습니다.') as nextsubject
			                   , orgFilename, fileName, secret,fk_userid, groupno, depthno
					      from question_board
					      where status = 1
			) V
			where question_seq = #{question_seq}
	</select>
	
	<!-- Q&A 조회수 1증가 시키기 -->
	<update id="addQuestionViewCount" parameterType="String">
		update question_board set viewcount = viewcount + 1
		where question_seq = #{question_seq}
	</update>
	
	
	<!-- Q&A 조회수 증가 없이 글 조회하기 -->
	<select id="getQuestionViewNoAdd" parameterType="String" resultType="com.spring.kanghm.model.QuestionVO">
		   select previousseq, previoussubject, question_seq, title, content, viewcount, writedate
		      ,nextseq, nextsubject, orgFilename, fileName, secret, fk_userid, groupno, depthno
			from
			(
			 select lag(question_seq, 1) over(order by question_seq desc) as previousseq  
					           , nvl(lag(title, 1) over(order by question_seq desc),'이전글이 없습니다')as previoussubject				           				           
					           , question_seq, title, content, viewcount
					           , to_char(writedate, 'yyyy-mm-dd hh24:mi:ss') as writedate				         
					           , lead(question_seq, 1) over(order by question_seq desc) as nextseq
					           , nvl(lead(title, 1) over(order by question_seq desc),'다음글이 없습니다.') as nextsubject
			                   , orgFilename, fileName, secret, fk_userid, groupno, depthno
					      from question_board
					      where status = 1
			) V
			where question_seq = #{question_seq}
	</select>
	
	<!-- Q&A 게시판 글 수정하기 완료하기 -->
	<update id="editquestionboardEnd" parameterType="com.spring.kanghm.model.QuestionVO">
		update question_board set title = #{title}
							 ,content = #{content}
							 ,writedate = sysdate
							 ,secret = #{secret}
		where question_seq = #{question_seq} and password = #{password}
	</update>
	
	<!-- Q&A 게시판 글 삭제 완료하기 -->
	<update id="delquestion" parameterType="HashMap">
		update question_board set status = 0
		where question_seq = #{question_seq} and password= #{password}
	</update>
	
</mapper>